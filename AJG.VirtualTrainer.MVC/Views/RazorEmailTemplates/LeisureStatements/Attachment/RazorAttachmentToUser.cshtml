@model VirtualTrainer.EscalationsFrameworkConfigEmailRazorModel
@using System.Runtime;
@using System.Linq;
<style>
    #outstandinginvoices table, #outstandinginvoices th, #outstandinginvoices td,
    #unallocatedreceipts table, #unallocatedreceipts th, #unallocatedreceipts td,
    #totalnetoutstanding table, #totalnetoutstanding th, #totalnetoutstanding td
    {
        border: 1px solid gray;
    }
    #outstandinginvoices th, #unallocatedreceipts th {
        background-color: #BDBDBD;
    }
</style>

<div>
    @*Headers*@
    <div style="width:900px; padding:0 20px 0 20px">
        <table style="width:100%;">
            <tr>
                <td>
                    <div style="text-align:left;">
                        <img height="80" src="\\development01\devteam$\Andy Fooks\VirtualTrainer\LeisureStatements_Dev\Assets\AJGLogo.png" />
                    </div>
                </td>
                <td>
                    <div style="text-align:right;">
                        <img height="80" src="\\development01\devteam$\Andy Fooks\VirtualTrainer\LeisureStatements_Dev\Assets\holidayAndHomesLogo.png" />
                    </div>
                </td>
            </tr>
        </table>
    </div>
    @*Introducer Details*@
    <div style="width:900px;padding:50px 20px 25px 20px;">
        @{
            var breachLog = Model.BreachLogs.FirstOrDefault();
            decimal invoiceBalanceTotal = 0;
            decimal notDueTotal = 0;
            decimal oneToThirtyDayTotal = 0;
            decimal thirtyOneToSixtyDayTotal = 0;
            decimal sixtyOneToNintyDayTotal = 0;
            decimal ninetyOneToOneHundredDayTotal = 0;
            decimal over120DayTotal = 0;
            decimal unallocatedReceiptsTotal = 0;
        }
        
        <div style="width:100%;">
            <table style="width:100%;">
                <tr>
                    <td>@breachLog.RuleBreachFieldOne</td>
                </tr>
                <tr>
                    <td>@breachLog.RuleBreachFieldTwo</td>
                </tr>
                <tr>
                    <td>@breachLog.RuleBreachFieldThree</td>
                </tr>
                <tr>
                    <td>@breachLog.RuleBreachFieldFour</td>
                </tr>
            </table>
        </div>
    </div>
    @*Statement*@
    <div style="width:900px;padding:0 20px 25px 20px;">
        <div>
            <table style="width:100%;">
                <tr>
                    <td style="border-bottom: 1px solid gray;">
                        <h2>Statement of Account</h2>
                    </td>
                </tr>
            </table>
        </div>
        <div style="padding-top:10px">
            <table>
                <tr>
                    <td width="60px" style="text-align:left;">Date:</td>
                    <td width="440px" style="text-align:left;">@DateTime.Now.ToString("dd MMM yyy")</td>
                    <td width="200px" style="text-align:right;">Introducer code:</td>
                    <td width="200px" style="text-align:left;">@breachLog.ContextRef</td>
                </tr>
            </table>
        </div>
        @*Outstanding Invoices*@
        <h3>Outstanding Invoices</h3>
        <div id="outstandinginvoices">
            <table cellspacing="0">
                <tr style="text-align:center;">
                    <th bgcolor="#BDBDBD"  width="100px">Reference</th>
                    <th bgcolor="#BDBDBD"  width="100px">Not Due</th>
                    <th bgcolor="#BDBDBD"  width="100px">1-30 Days</th>
                    <th bgcolor="#BDBDBD"  width="100px">31-60 Days</th>
                    <th bgcolor="#BDBDBD"  width="100px">61-90 Days</th>
                    <th bgcolor="#BDBDBD"  width="100px">91-120 Days</th>
                    <th bgcolor="#BDBDBD"  width="100px">120+ Days</th>
                    <th bgcolor="#BDBDBD"  width="100px"></th>
                    <th bgcolor="#BDBDBD"  width="100px">Balance Due (&pound;)</th>
                </tr>

                @foreach (var invoiceBreach in Model.BreachLogs)
                {
                    if (invoiceBreach.BreachDisplayText == "OutstandingInvoices")
                    {
                        decimal parsedVal = 0;
                        if (decimal.TryParse(invoiceBreach.RuleBreachFieldTen, out parsedVal))
                        {
                            notDueTotal = notDueTotal + parsedVal;
                        }
                        parsedVal = 0;
                        if (decimal.TryParse(invoiceBreach.RuleBreachFieldEleven, out parsedVal))
                        {
                            oneToThirtyDayTotal = oneToThirtyDayTotal + parsedVal;
                        }
                        parsedVal = 0;
                        if (decimal.TryParse(invoiceBreach.RuleBreachFieldTwelve, out parsedVal))
                        {
                            thirtyOneToSixtyDayTotal = thirtyOneToSixtyDayTotal + parsedVal;
                        }
                        parsedVal = 0;
                        if (decimal.TryParse(invoiceBreach.RuleBreachFieldThirteen, out parsedVal))
                        {
                            sixtyOneToNintyDayTotal = sixtyOneToNintyDayTotal + parsedVal;
                        }
                        parsedVal = 0;
                        if (decimal.TryParse(invoiceBreach.RuleBreachFieldFourteen, out parsedVal))
                        {
                            ninetyOneToOneHundredDayTotal = ninetyOneToOneHundredDayTotal + parsedVal;
                        }
                        parsedVal = 0;
                        if (decimal.TryParse(invoiceBreach.RuleBreachFieldFifteen, out parsedVal))
                        {
                            over120DayTotal = over120DayTotal + parsedVal;
                        }
                        parsedVal = 0;
                        if (decimal.TryParse(invoiceBreach.RuleBreachFieldNine, out parsedVal))
                        {
                            invoiceBalanceTotal = invoiceBalanceTotal + parsedVal;
                        }

                        <tr style="text-align:center;">
                            <td>@invoiceBreach.RuleBreachFieldSeven.Split('/')[2]</td>
                            <td>@(invoiceBreach.RuleBreachFieldTen == "0" ? "-" : invoiceBreach.RuleBreachFieldTen)</td>
                            <td>@(invoiceBreach.RuleBreachFieldEleven == "0" ? "-" : invoiceBreach.RuleBreachFieldEleven)</td>
                            <td>@(invoiceBreach.RuleBreachFieldTwelve == "0" ? "-" : invoiceBreach.RuleBreachFieldTwelve)</td>
                            <td>@(invoiceBreach.RuleBreachFieldThirteen == "0" ? "-" : invoiceBreach.RuleBreachFieldThirteen)</td>
                            <td>@(invoiceBreach.RuleBreachFieldFourteen == "0" ? "-" : invoiceBreach.RuleBreachFieldFourteen)</td>
                            <td>@(invoiceBreach.RuleBreachFieldFifteen == "0" ? "-" : invoiceBreach.RuleBreachFieldFifteen)</td>
                            <td></td>
                            <td>@(invoiceBreach.RuleBreachFieldNine == "0" ? "-" : invoiceBreach.RuleBreachFieldNine)</td>
                        </tr>
                    }
                }
                @*Totals*@
                <tr>
                    <td colspan="8" style="text-align:right;">Total Outstanding Invoice Balance</td>
                    @*<td style="border-top:1px solid black; border-bottom:1px solid black;">
                        @(notDueTotal == 0 ? "-" : String.Format("{0:0.00}", notDueTotal))
                    </td>
                    <td style="border-top:1px solid black; border-bottom:1px solid black;">
                        @(oneToThirtyDayTotal == 0 ? "-" : String.Format("{0:0.00}", oneToThirtyDayTotal))
                    </td>
                    <td style="border-top:1px solid black; border-bottom:1px solid black;">
                        @(thirtyOneToSixtyDayTotal == 0 ? "-" : String.Format("{0:0.00}", thirtyOneToSixtyDayTotal))
                    </td>
                    <td style="border-top:1px solid black; border-bottom:1px solid black;">
                        @(sixtyOneToNintyDayTotal == 0 ? "-" : String.Format("{0:0.00}", sixtyOneToNintyDayTotal))
                    </td>
                    <td style="border-top:1px solid black; border-bottom:1px solid black;">
                        @(ninetyOneToOneHundredDayTotal == 0 ? "-" : String.Format("{0:0.00}", ninetyOneToOneHundredDayTotal))
                    </td>
                    <td style="border-top:1px solid black; border-bottom:1px solid black;">
                        @(over120DayTotal == 0 ? "-" : String.Format("{0:0.00}", over120DayTotal))
                    </td>
                    <td></td>*@
                    <td style="border-top:1px solid black; border-bottom:1px solid black; text-align:center;">
                        @(invoiceBalanceTotal == 0 ? "-" : String.Format("{0:0.00}", invoiceBalanceTotal))
                    </td>
                </tr>
            </table>
        </div>
        @*Unallocated Receipts*@
        <h3>Unallocated Receipts</h3>
        <div id="unallocatedreceipts">
            <table cellspacing="0">
                <tr style="text-align:center;">
                    <th width="200px">Receipt Date</th>
                    <th width="200px">Payment Method</th>
                    <th width="400px">Payment Reference</th>
                    <th width="100px">Value (&pound;)</th>
                </tr>

                @foreach (var invoiceBreach in Model.BreachLogs)
                {
                    if (invoiceBreach.BreachDisplayText == "UnallocatedReceipts")
                    {
                        decimal parsedVal = 0;
                        if (decimal.TryParse(invoiceBreach.RuleBreachFieldEight, out parsedVal))
                        {
                            unallocatedReceiptsTotal = unallocatedReceiptsTotal + parsedVal;
                        }
                        DateTime dt = DateTime.Now;
                        string date = string.Empty;
                        if (DateTime.TryParse(invoiceBreach.RuleBreachFieldSix, out dt))
                        {
                            date = dt.ToString("dd/MM/yyy");
                        }
                        <tr style="text-align:center;">
                            <td width="200px" >@date</td>
                            <td width="200px" >@invoiceBreach.RuleBreachFieldSeven</td>
                            <td width="400px" ></td>
                            <td width="100px">@invoiceBreach.RuleBreachFieldEight</td>
                        </tr>
                    }
                }
                @*Totals*@
                <tr>
                    <td style="text-align:right;" colspan="3">Total Unallocated Receipts</td>
                    <td style="border-top:1px solid black; border-bottom:1px solid black; text-align:center;">
                        @(unallocatedReceiptsTotal == 0 ? "" : String.Format("{0:0.00}", unallocatedReceiptsTotal))
                    </td>
                </tr>
            </table>
        </div>
        @*Total Outstanding*@
        <br />
        <br />
        <div id="totalnetoutstanding">
            <table cellspacing="0">
                @*Totals*@
                <tr>
                    <td width="800px" style="text-align: right;">Total Net Outstanding</td>
                    <td width="100px" style="border-top:2px solid black; border-bottom:2px double black; text-align:center;">
                        @(String.Format("{0:0.00}", (invoiceBalanceTotal - unallocatedReceiptsTotal)))
                    </td>
                </tr>
            </table>
        </div>
    </div>
    <br />
    @*Payment Info*@
    <div style="width:900px; padding:0 20px 0 20px">
        <div>
            <p>
                <b>Note: </b> The above statement relates to policy activity and transactions completed relating to your Individual Private Owners scheme administered as an Appointed Representative of Arthur J. Gallagher Holiday and Home Parks. 
            </p>
            <p>
                To review a detailed breakdown please reference previously issued invoices. 
            </p>
            <p>
                Please note any payment must be settled separate to all other policies you may have placed with Arthur J. Gallagher Insurance Brokers Ltd.
            </p>
            <p>
                Please contact your our customer services team on 01453 801703 or your regional account manager to discuss any queries with your statement.
            </p>
            <p>
                Please make payments by direct bank transfer to the following account, quoting Introducer code - @breachLog.ContextRef. 
            </p>
        </div>

        <div>
            <table>
                <tr>
                    <td style="width:150px">Account Name:</td>
                    <td>Arthur J. Gallagher Insurance Brokers Limited</td>
                </tr>
                <tr>
                    <td style="width:150px">Account Number:</td>
                    <td>64160866</td>
                </tr>
                <tr>
                    <td style="width:150px">Sort Code:</td>
                    <td>602140</td>
                </tr>
                <tr>
                    <td style="width:150px">IBAN:</td>
                    <td>GB73 NWBK 6021 0000 64 1608 66</td>
                </tr>
                <tr>
                    <td style="width:150px">Swift No:</td>
                    <td>NWBK GB2L</td>
                </tr>
            </table>
        </div>
    </div>
    <div style="width:900px; margin:20px 0 20px 0; border-bottom:1px solid gray">
    </div>
    <div style='width:900px; padding:0 20px 0 20px;'>
        <table style='font-size:0.7em;'>
            <tr>
                <td width='300px'>
                    Arthur J. Gallagher Insurance Brokers Ltd
                </td>
                <td width='100px'></td>
                <td width='500px' style='text-align:right;'>
                    Reg. Office: Spectrum Building, 7th Floor, 55 Blythswood Street, Glasgow, G2 7AT
                </td>
            </tr>
            <tr>
                <td>Is authorised and regulated by</td>
                <td></td>
                <td style='text-align:right;'>T: 0141 285 3300 F: 0870 191 6766 W: www.ajginternational.com</td>
            </tr>
            <tr>
                <td>Financial Conduct Authority</td>
                <td></td>
                <td style='text-align:right;'>Registered in Scotland.  Registration No. SC108909</td>
            </tr>
            <tr>
                <td></td>
                <td></td>
                <td style='text-align:right;'>VAT Registration No: 973 0169 15</td>
            </tr>
            <tr>
                <td>The Financial Conduct Authority</td>
                <td></td>
                <td style='text-align:right;'></td>
            </tr>
            <tr>
                <td>Regulate all types of product that we provide.</td>
                <td></td>
                <td style='text-align:right;'></td>
            </tr>
        </table>
    </div>
</div>

